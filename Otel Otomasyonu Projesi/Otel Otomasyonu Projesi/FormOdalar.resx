<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtnCikis10.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYa
        HSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgo
        KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wAARCAAyADIDASIAAhEBAxEB/8QA
        GwAAAQUBAQAAAAAAAAAAAAAAAAEEBgcIAwX/xAAyEAABAwMBBAgFBQEAAAAAAAABAgMEAAURBhIhMUET
        FFFhcYGRoQcIImKxFzIzUuGi/8QAGwEAAQUBAQAAAAAAAAAAAAAAAAEDBAUGBwL/xAAnEQACAgEDAwMF
        AQAAAAAAAAABAgADBBEhMQUGEkFRoRNhgZHB8P/aAAwDAQACEQMRAD8A1QBjfzrhLlsxUAvKxngOZrle
        Lixaba/NlqCWWk7R7+6qVf1TN1NqBMOG+lkrO264d/RN9g+4/wC0jMFGpjlVTWt4rLSuer7ZbcGfPixA
        r9odcCVK8AePlTWDrqxzZAZjXaG4+eDSnAFnwScE1Gbtaotua67b2UoSUpStSjlZwMAknefWoZebm282
        pqShDqP6rAIqNZk+B3l1idEbJTVTvL7iXFiSoICgFnlnjT3hWX7VrB6xXJplb6l211WEhaiSwruPHZPf
        wq/tG6ljahiOFr6XmThac53cjT1Vq2jVZXZ2Bdg2fTtHPH3kh39oopfWinJClK/NHqM2TSlsYSsp63KI
        OOYSnOPcVVnw9vbDOz0iip6Q8kKHM5wB5DjVlfNxp9d40BAltJJ6hNSpWOSVgp/JTWfLU49ATEebOysJ
        BSrGcKTuPvv8xUHOZlQMPeajtSmq/Keqzkrt+xL1dkJl3VcCRNdMhe2lpZUFI2gSAFEcM4PhuqNXZuGi
        2SZzzkttLUzquwpICidgq39hyMVDl6huSm3W1yDsuZKxsJG0SQTnd2gHyFc59+uM5C0S5JeStwOqC0pO
        0sDAUd2843eFVD5Cn0nRMfo91RBDDTbj+bevx+Y513EjwLm5CjvOuKZUUr6QAckkEY8T6VLPl81Qv9SW
        bSpZIkMOIIzzSnbB/wCTVdz5Um5zC7JcLslzG0tWAT3ny51Lfli089K+L0y8qSroIcZxQJ7V/Qn1G1U/
        ppJZ2HEyneoWunHqc6uNdfjX5mvaKTA7KKtpz6M7zbIt4tUu3XBoOxJLZacQeYP4PYazTffh69ZZzttm
        oUptRKo8lI/kA4KH3AYyn/DWoueTTa4xYs2OWZrCX2jv2VJzg9o76RlDDQ8Rym56HFlZ0YcGY9k6Ju7K
        8R0dYSTuKASfTj7Urmhr+10XTxFMhxO0C4CkY88VpiTp+3sqJYXKSn+i2FOgeB3H1JrmizRZBCXXpISN
        30RFJOPFWR7VXnptROu81qd7Z6p4kKT7zPsHRz7akR2Glyp8g7CUoHHuSPyTux76H+F+jGdGWAsEJXcJ
        Sullujmrkkfakbh5nnXuWa0223ZVBjFLqhhTq0krPmfxXreNTq61qXxUbTMZmbdnWm69tWP+2hRSeRor
        3IsWgcKKKIQPGiiiiEQUK4iiiiEWiiiiE//Z
</value>
  </data>
</root>